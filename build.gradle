plugins {
    id 'fabric-loom' version '0.10.50'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    maven {
        name 'm2-dv8tion'
        url 'https://m2.dv8tion.net/releases'
    }
    maven {
        name = "Fabric"
        url = "https://maven.fabricmc.net/"
    }
    mavenCentral()
}

dependencies {

    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"

    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    include(modImplementation("net.dv8tion:JDA:4.3.0_277") {
        exclude module: 'opus-java'
    })

    include(modImplementation("com.konghq:unirest-java:+"))

    include 'net.sf.trove4j:trove4j:3.0.3'
    include 'org.apache.commons:commons-collections4:4.4'
    include 'org.apache.httpcomponents:httpclient:4.5.13'
    include 'org.jetbrains:annotations:22.0.0'
    include 'org.jetbrains.kotlin:kotlin-stdlib:1.5.31'
    include 'com.neovisionaries:nv-websocket-client:2.14'
    include 'com.fasterxml.jackson.core:jackson-annotations:2.13.0'
    include 'com.fasterxml.jackson.core:jackson-core:2.13.0'
    include 'com.fasterxml.jackson.core:jackson-databind:2.13.0'
    include 'com.google.code.gson:gson:2.8.9'
    include 'com.neovisionaries:nv-websocket-client:2.14'
    include 'com.squareup.okhttp3:okhttp:4.9.2'
    include 'com.squareup.okio:okio:2.10.0'
    include(modImplementation("org.json:json:20210307"))
    include(modImplementation("com.vdurmont:emoji-java:5.1.1"))
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}